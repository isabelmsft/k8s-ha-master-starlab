---
- name: Generate Hosts File
  hosts: masters
  become: true
  gather_facts: true
  tasks:
    - name: Upgrade all packages
      yum: name=* state=latest
    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
    - name: Add an apt signing key for docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      environment:
        http_proxy: http://100.127.20.21:8080
        https_proxy: http://100.127.20.21:8080
    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu xenial stable
        state: present
    - name: Install docker and its dependencies
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: Configure docker daemon
      copy:
        src: '../config/daemon.json'
        dest: '/etc/docker/daemon.json'
    - name: Ensure docker.service.d dir exists
      file: >
        path=/etc/systemd/system/docker.service.d
        recurse=yes
        state=directory
    - name: Set docker proxies
      copy:
        src: '../config/http-proxy.conf'
        dest: '/etc/systemd/system/docker.service.d/http-proxy.conf'
    - name: Enable docker systemd service
      service:
        name: 'docker'
        state: 'started'
        enabled: 'yes'
    - name: Ensure net.d directory exists for dummy CNI configuration
      file: >
        path=/etc/cni/net.d
        recurse=yes
        state=directory 
    - name: Add dummy CNI configuration
      copy:
        src: '../config/10-flannel.conflist'
        dest: '/etc/cni/net.d/10-flannel.conflist'
    - name: Reboot the machine
      reboot:
    - name: Add an apt signing key for Kubernetes
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present
      environment:
        http_proxy: http://100.127.20.21:8080
        https_proxy: http://100.127.20.21:8080
    - name: Adding apt repository for Kubernetes
      apt_repository:
        repo: deb https://apt.kubernetes.io/ kubernetes-xenial main
        state: present
        filename: kubernetes.list
    - name: Install Kubernetes binaries
      apt: 
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet 
          - kubeadm 
          - kubectl
    - name: Restart kubelet
      service:
        name: kubelet
        daemon-reload: yes
        state: restarted
    - name: Let iptables see bridged traffic
      command: modprobe br_netfilter
    - name: Disable SWAP
      command: swapoff -a

